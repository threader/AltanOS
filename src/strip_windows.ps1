$sysdrive =  $Env:SystemDrive
$altanosinstdir = "$sysdrive\AltanOS.inst"

$altanlog = "$altanosinstdir\logs"

if (-not (Test-Path -Path $altanlog)) {
	mkdir $altanosinstdir
	mkdir $altanosinstdir\logs
}


function set_win_packages_removable() {

 $GET_APPPACKAGE_NON_REMOVABLE_TRUE = Get-AppPackage -AllUsers | Where-Object {  ($_.NonRemovable -like 'True') -and ($_.PackageFamilyName -notlike "Microsoft.CommandPalette*")  -and ($_.PackageFamilyName -notlike "Microsoft.AccountsControl*") -and ($_.PackageFamilyName -notlike "Microsoft.AsyncTextService*") -and ($_.PackageFamilyName -notlike "Microsoft.CredDialogHost*") -and ($_.PackageFamilyName -notlike "Microsoft.ECApp*") -and ($_.PackageFamilyName -notlike "Microsoft.LockApp*") -and ($_.PackageFamilyName -notlike "Microsoft.Win32WebViewHost*") -and  ($_.PackageFamilyName -notlike "Microsoft.Windows.CapturePicker*") -and ($_.PackageFamilyName -notlike "Microsoft.Windows.OOBE*") -and ($_.PackageFamilyName -notlike "Microsoft.Windows.PinningConfirmationDialog*") -and ($_.PackageFamilyName -notlike "Microsoft.Windows.SecHealthU*") -and ($_.PackageFamilyName -notlike "Microsoft.Windows.XGpuEjectDialog*") -and ($_.PackageFamilyName -notlike "Microsoft.XboxGameCallableUI*") -and ($_.PackageFamilyName -notlike "MicrosoftWindows.UndockedDevKi*") -and ($_.PackageFamilyName -notlike "NcsiUwpApp*") -and ($_.PackageFamilyName -notlike "windows.immersivecontrolpanel*") -and ($_.PackageFamilyName -notlike "Windows.PrintDialog*") -and ($_.PackageFamilyName -notlike "1527c705-839a-4832-9118-54d4Bd6a0c89") -and ($_.PackageFamilyName -notlike "c5e2524a-ea46-4f67-841f-6a9465d9d515") -and ($_.PackageFamilyName -notlike "E2A4F912-2574-4A75-9BB0-0D023378592B") -and ($_.PackageFamilyName -notlike "F46D4000-FD22-4DB4-AC8E-4E1DDDE828FE") -and ($_.PackageFamilyName -notlike "Microsoft.AAD.BrokerPlugin*") -and ($_.PackageFamilyName -notlike "Microsoft.AccountsControl*") -and ($_.PackageFamilyName -notlike "Microsoft.Windows.ShellExperienceHost*") -and ($_.PackageFamilyName -notlike "Microsoft.Windows.StartMenuExperienceHost*") -and ($_.PackageFamilyName -notlike "Microsoft.Windows.Search*") -and ($_.PackageFamilyName -notlike "Microsoft.Windows.Search*")   }

 ForEach ($_ in $GET_APPPACKAGE_NON_REMOVABLE_TRUE.PackageFamilyName) {
  Write-Output "Setting NonRemovableAppsPolicy to 0 to package : $_" >> $altanlog\NonRemovableAppsPolicy_current.log
  #Set-NonRemovableAppsPolicy -Online -PackageFamilyName $_ -NonRemovable 0 >> $altanlog\NonRemovableAppsPolicy_process.log
  Set-NonRemovableAppsPolicy -Online -PackageFamilyName $_ -NonRemovable 0 >> $altanlog\NonRemovableAppsPolicy_now_disabled.log

 }

}
set_win_packages_removable

# Get-AppPackage -AllUsers | Remove-AppPackage -AllUsers # Try to be more spesific

function disable_win_packages() {

 $GET_APPPACKAGE = Get-AppPackage -AllUsers | Where-Object {  ($_.NonRemovable -like 'False') -and ($_.PackageFamilyName -notlike "Microsoft.CommandPalette*")  -and ($_.PackageFullName -notlike "Microsoft.MPEG2VideoExtension*") -and ($_.PackageFullName -notlike "Microsoft.AVCEncoderVideoExtension*") -and ($_.PackageFullName -notlike "Microsoft.AV1VideoExtension*") -and ($_.PackageFullName -notlike "Microsoft.ApplicationCompatibilityEnhancements*") -and ($_.PackageFullName -notlike "Microsoft.PowerToys*") -and ($_.PackageFullName -notlike "NotepadPlusPlus*") -and ($_.PackageFullName -notlike "AppUp.IntelGraphicsExperience*") -and ($_.PackageFullName -notlike "NVIDIACorp.NVIDIAControlPanel*") -and ($_.PackageFullName -notlike "AppUp.ThunderboltControlCenter*") -and ($_.PackageFullName -notlike "Microsoft.LanguageExperiencePack*") -and ($_.PackageFullName -notlike "MicrosoftWindows.Client.WebExperienc*") -and ($_.PackageFullName -notlike "Microsoft.WindowsTerminal*") -and ($_.PackageFullName -notlike "Microsoft.RawImageExtension*") -and ($_.PackageFullName -notlike "Microsoft.HEVCVideoExtension*") -and ($_.PackageFullName -notlike "Microsoft.HEIFImageExtension*") -and ($_.PackageFullName -notlike "Microsoft.WindowsAppRuntime*")  -and  ($_.PackageFullName -notlike "Microsoft.GetHelp*") -and  ($_.PackageFullName -notlike "Windows.PrintDialog*") -and ($_.PackageFullName -notlike "Microsoft.LockApp*") -and ($_.PackageFullName -notlike "Microsoft.Win32WebViewHost*") -and ($_.PackageFullName -notlike "Microsoft.Winget.Source*") -and ($_.PackageFullName -notlike "Microsoft.WindoesAppRuntime*") -and ($_.PackageFullName -notlike "Microsoft.UI.Xaml*") -and ($_.PackageFullName -notlike "Microsoft.NET.Native.Runtime*") -and ($_.PackageFullName -notlike "Microsoft.NET.Native.Runtime*") -and ($_.PackageFullName -notlike "Microsoft.NET.Native.Framework.*") -and ($_.PackageFullName -notlike "Microsoft.NET.Native.Framework.1.7*") -and ($_.PackageFullName -notlike "Microsoft.NET.Native.Framework.2.2*") -and ($_.PackageFullName -notlike "Microsoft.UI.Xaml.2.8*")  -and ($_.PackageFullName -notlike "Microsoft.VCLibs.140.00.UWPDesktop*") -and ($_.PackageFullName -notlike "Microsoft.UI.Xaml.2.0*") -and ($_.PackageFullName -notlike "1527c705-839a-4832-9118-54dBd6a0c89*") -and ($_.PackageName -notlike "c5e2524a-ea46-4f67-841f-6a9465d9d515*") -and ($_.PackageName -notlike "E2A4F912-2574-4A75-9BB0-0D023378592B*") -and ($_.PackageName -notlike "F46D4000-FD22-4DB4-AC8E-4E1DDDE828FE*") -and ($_.PackageName -notlike "Microsoft.AccountsControl*") -and ($_.PackageName -notlike "Microsoft.AsyncTextService*") -and ($_.PackageName -notlike "Microsoft.CredDialogHost*") -and ($_.PackageName -notlike "Microsoft.ECApp*") -and ($_.PackageName -notlike "Microsoft.LockApp*") -and ($_.PackageName -notlike "Microsoft.MicrosoftEdgeDevToolsClient*") -and ($_.PackageName -notlike "Microsoft.Win32WebViewHos*") -and ($_.PackageName -notlike "Microsoft.Windows.Apprep.ChxApp*") -and ($_.PackageName -notlike "Microsoft.Windows.CallingShellApp*") -and ($_.PackageName -notlike "Microsoft.Windows.CapturePicker*") -and ($_.PackageName -notlike "Microsoft.Windows.PinningConfirmationDialog*") -and ($_.PackageName -notlike "Microsoft.Windows.SecHealthUI*") -and ($_.PackageName -notlike "Microsoft.Windows.XGpuEjectDialog*") -and ($_.PackageName -notlike "NcsiUwpApp*") -and ($_.PackageName -notlike "Windows.CBSPreview*") -and ($_.PackageName -notlike "MicrosoftWindows.Client.CBS*") -and ($_.PackageName -notlike "Microsoft.Windows.ContentDeliveryManager*") -and ($_.PackageName -notlike "Microsoft.Windows.Search*") -and ($_.PackageName -notlike "Microsoft.Windows.ShellExperienceHost*") -and ($_.PackageName -notlike "Microsoft.Windows.StartMenuExperienceHost*") -and ($_.PackageName -notlike "MicrosoftWindows.UndockedDevKit*") -and ($_.PackageName -notlike "Microsoft.Windows.OOBENetworkCaptivePortal*") -and ($_.PackageName -notlike "Microsoft.Windows.OOBENetworkConnectionFlow*") -and ($_.PackageName -notlike "Microsoft.AAD.BrokerPlugin*") -and ($_.PackageName -notlike "Microsoft.Windows.CloudExperienceHost*") -and ($_.PackageName -notlike "Windows.PrintDialog*") -and ($_.PackageName -notlike "Microsoft.MicrosoftEdge.Stable*") -and ($_.PackageName -notlike "windows.immersivecontrolpanel*") -and ($_.PackageName -notlike "Microsoft.Windows.NarratorQuickStart*") -and ($_.PackageName -notlike "Microsoft.Windows.OOBENetworkCaptivePortal*") -and ($_.PackageName -notlike "Microsoft.Windows.Search*") -and ($_.PackageName -notlike "Microsoft.Windows.CloudExperienceHost*") -and ($_.PackageName -notlike "Microsoft.MicrosoftEdge*") -and ($_.PackageFullName -notlike "Microsoft.DesktopAppInstaller*") -and ($_.PackageFullName -notlike "Microsoft.MicrosoftSolitaireCollection*") -and ($_.PackageFullName -notlike "Microsoft.MSPaint*") -and ($_.PackageFullName -notlike "Microsoft.Service.Store**") -and ($_.PackageFullName -notlike "Microsoft.MicrosoftStickyNotes*") -and ($_.PackageFullName -notlike "Microsoft.Windows.Photos*") -and ($_.PackageFullName -notlike "Microsoft.MicrosoftEdge*") -and ($_.PackageFullName -notlike "Microsoft.StorePurchaseApp*") -and ($_.PackageFullName -notlike "Microsoft.VP9*") -and ($_.PackageFullName -notlike "Microsoft.VP9VideoExtensions*") -and ($_.PackageFullName -notlike "Microsoft.Web*Extension*") -and ($_.PackageFullName -notlike "Microsoft.Wallet*") -and ($_.PackageFullName -notlike "Microsoft.Windows.DevHome*") -and ($_.PackageFullName -notlike "Microsoft.WindowsStore*") -and ($_.PackageFullName -notlike "Microsoft.WindowsMaps*")  -and ($_.PackageFullName -notlike "Microsoft.WindowsSoundRecorder*") -and ($_.PackageFullName -notlike "Microsoft.VCLibs*") -and ($_.PackageFullName -notlike "Microsoft.VP9VideoEstension*") -and ($_.PackageFullName -notlike "Microsoft.Web*Extension*") -and ($_.PackageFullName -notlike "Microsoft.Wallet*") -and ($_.PackageFullName -notlike "Microsoft.Windows.DevHome*") -and ($_.PackageFullName -notlike "Microsoft.WindowsAlarms*") -and ($_.PackageFullName -notlike "Microsoft.WindowsCalculator*") }

 ForEach ($_ in $GET_APPPACKAGE) {
  Write-Output "Removing AppPackage : $_ " >> $altanlog\AppPackage.log
  Remove-AppPackage -Package $_ -AllUsers 
 }

 $GET_WINCAP = Get-WindowsCapability  -Online | Where-Object { ($_.State -like 'Installed')  -and ($_.Name -notlike "Language.OCR*") -and  ($_.Name -notlike "Microsoft.GetHelp*") -and ($_.Name -notlike "Microsoft.Windows.MSPaint*") -and ($_.Name -notlike "DirectX.Configuration.Database*") -and ($_.Name -notlike "Language.Basic*") -and ($_.Name -notlike "Language.Handwriting*") -and ($_.Name -notlike "Windows.Client.ShellComponents*") -and ($_.Name -notlike "OpenSSH.Client*") -and ($_.Name -notlike "Microsoft.Windows.Powershell.ISE*") -and ($_.Name -notlike "Microsoft.Windows.Notepad*") -and ($_.Name -notlike "Microsoft.Windows.MSPaint*") -and ($_.Name -notlike "MathRecognizer*") -and ($_.Name -notlike "Print.Fax.Scan*") }
 $GET_WINCAP_NAME = Write-Output $GET_WINCAP.Name

 ForEach ($_ in $GET_WINCAP_NAME) {
  Write-Output "Removing WindowsCapability : $_  " >> $altanlog\WindowsCapability.log
  Remove-WindowsCapability -online -Name $_ 
 }

 $GET_APPXPPACKAGE = Get-AppXProvisionedPackage -online | Where-Object { ($_.PackageName -notlike "Microsoft.SecHealthUI*") -and ($_.PackageName -notlike "NVIDIACorp.NVIDIAControlPanel*") -and ($_.PackageName -notlike "Microsoft.RawImageExtension*") -and ($_.PackageName -notlike "Microsoft.MPEG2VideoExtension*") -and ($_.PackageName -notlike "Microsoft.HEVCVideoExtension*") -and ($_.PackageName -notlike "Microsoft.AVCEncoderVideoExtension*") -and ($_.PackageName -notlike "Microsoft.AV1VideoExtension*") -and ($_.PackageName -notlike "Microsoft.ApplicationCompatibilityEnhancement*") -and ($_.PackageName -notlike "AppUp.ThunderboltControlCenter*") -and ($_.PackageName -notlike "AppUp.IntelGraphicsExperience*") -and ($_.PackageName -notlike "Microsoft.GetHelp*") -and ($_.PackageName -notlike "c5e2524a-ea46-4f67-841f-6a9465d9d515") -and ($_.PackageName -notlike "E2A4F912-2574-4A75-9BB0-0D023378592B") -and ($_.PackageName -notlike "F46D4000-FD22-4DB4-AC8E-4E1DDDE828FE") -and ($_.PackageName -notlike "Microsoft.AccountsControl") -and ($_.PackageName -notlike "Microsoft.AsyncTextService") -and ($_.PackageName -notlike "Microsoft.CredDialogHost") -and ($_.PackageName -notlike "Microsoft.ECApp") -and ($_.PackageName -notlike "Microsoft.LockApp") -and ($_.PackageName -notlike "Microsoft.MicrosoftEdgeDevToolsClient") -and ($_.PackageName -notlike "Microsoft.Win32WebViewHos") -and ($_.PackageName -notlike "Microsoft.Windows.Apprep.ChxApp") -and ($_.PackageName -notlike "Microsoft.Windows.CallingShellApp") -and ($_.PackageName -notlike "Microsoft.Windows.CapturePicker") -and ($_.PackageName -notlike "Microsoft.Windows.PinningConfirmationDialog") -and ($_.PackageName -notlike "Microsoft.Windows.SecHealthUI") -and ($_.PackageName -notlike "Microsoft.Windows.XGpuEjectDialog") -and ($_.PackageName -notlike "NcsiUwpApp") -and ($_.PackageName -notlike "Windows.CBSPreview") -and ($_.PackageName -notlike "MicrosoftWindows.Client.CBS") -and ($_.PackageName -notlike "Microsoft.Windows.ContentDeliveryManager") -and ($_.PackageName -notlike "Microsoft.Windows.Search") -and ($_.PackageName -notlike "Microsoft.Windows.ShellExperienceHost") -and ($_.PackageName -notlike "Microsoft.Windows.StartMenuExperienceHost") -and ($_.PackageName -notlike "MicrosoftWindows.UndockedDevKit") -and ($_.PackageName -notlike "Microsoft.Windows.OOBENetworkCaptivePortal") -and ($_.PackageName -notlike "Microsoft.Windows.OOBENetworkConnectionFlow") -and ($_.PackageName -notlike "Microsoft.AAD.BrokerPlugin") -and ($_.PackageName -notlike "Microsoft.BioEnrollment") -and ($_.PackageName -notlike "Microsoft.Windows.CloudExperienceHost") -and ($_.PackageName -notlike "Windows.PrintDialog") -and ($_.PackageName -notlike "Microsoft.MicrosoftEdge.Stable") -and ($_.PackageName -notlike "windows.immersivecontrolpanel") -and ($_.PackageName -notlike "Microsoft.Windows.NarratorQuickStart") -and ($_.PackageName -notlike "Microsoft.Windows.ParentalControls")-and ($_.PackageName -notlike "Microsoft.Windows.PeopleExperienceHost")-and ($_.PackageName -notlike "Microsoft.Windows.OOBENetworkCaptivePortal") -and ($_.PackageName -notlike "Microsoft.Windows.Search") -and ($_.PackageName -notlike "Microsoft.Windows.CloudExperienceHost") -and ($_.PackageName -notlike "Microsoft.MicrosoftEdge")  -and ($_.PackageName -notlike "c5e2524a-ea46-4f67-841f-6a9465d9d515") -and ($_.PackageName -notlike "E2A4F912-2574-4A75-9BB0-0D023378592B") -and ($_.PackageName -notlike "F46D4000-FD22-4DB4-AC8E-4E1DDDE828FE") -and ($_.PackageName -notlike "Microsoft.AccountsControl") -and ($_.PackageName -notlike "Microsoft.AsyncTextService") -and ($_.PackageName -notlike "Microsoft.CredDialogHost") -and ($_.PackageName -notlike "Microsoft.ECApp") -and ($_.PackageName -notlike "Microsoft.LockApp") -and ($_.PackageName -notlike "Microsoft.MicrosoftEdgeDevToolsClient") -and ($_.PackageName -notlike "Microsoft.Win32WebViewHos") -and ($_.PackageName -notlike "Microsoft.Windows.Apprep.ChxApp") -and ($_.PackageName -notlike "Microsoft.Windows.CallingShellApp") -and ($_.PackageName -notlike "Microsoft.Windows.CapturePicker") -and ($_.PackageName -notlike "Microsoft.Windows.PinningConfirmationDialog") -and ($_.PackageName -notlike "Microsoft.Windows.SecHealthUI") -and ($_.PackageName -notlike "Microsoft.Windows.XGpuEjectDialog") -and ($_.PackageName -notlike "NcsiUwpApp") -and ($_.PackageName -notlike "Windows.CBSPreview") -and ($_.PackageName -notlike "MicrosoftWindows.Client.CBS") -and ($_.PackageName -notlike "Microsoft.Windows.ContentDeliveryManager") -and ($_.PackageName -notlike "Microsoft.Windows.Search") -and ($_.PackageName -notlike "Microsoft.Windows.ShellExperienceHost") -and ($_.PackageName -notlike "Microsoft.Windows.StartMenuExperienceHost") -and ($_.PackageName -notlike "MicrosoftWindows.UndockedDevKit") -and ($_.PackageName -notlike "Microsoft.Windows.OOBENetworkCaptivePortal") -and ($_.PackageName -notlike "Microsoft.Windows.OOBENetworkConnectionFlow") -and ($_.PackageName -notlike "Microsoft.AAD.BrokerPlugin") -and ($_.PackageName -notlike "Microsoft.BioEnrollment") -and ($_.PackageName -notlike "Microsoft.Windows.CloudExperienceHost") -and ($_.PackageName -notlike "Windows.PrintDialog") -and ($_.PackageName -notlike "Microsoft.MicrosoftEdge.Stable") -and ($_.PackageName -notlike "windows.immersivecontrolpanel") -and ($_.PackageName -notlike "Microsoft.Windows.NarratorQuickStart") -and ($_.PackageName -notlike "Microsoft.Windows.ParentalControls")-and ($_.PackageName -notlike "Microsoft.Windows.PeopleExperienceHost")-and ($_.PackageName -notlike "Microsoft.Windows.OOBENetworkCaptivePortal") -and ($_.PackageName -notlike "Microsoft.Windows.Search") -and ($_.PackageName -notlike "Microsoft.Windows.CloudExperienceHost") -and ($_.PackageName -notlike "Microsoft.MicrosoftEdge") -and ($_.PackageName -notlike "Microsoft.DesktopAppInstaller*") -and ($_.PackageName -notlike "Microsoft.HEIFImageExtension*") -and ($_.PackageName -notlike "Microsoft.MicrosoftSolitaireCollection*") -and ($_.PackageName -notlike "Microsoft.MSPaint*") -and ($_.PackageName -notlike "Microsoft.MicrosoftStickyNotes") -and ($_.PackageName -notlike "Microsoft.Windows.Photos*") -and ($_.PackageName -notlike "Microsoft.MicrosoftEdge*") -and ($_.PackageName -notlike "Microsoft.StorePurchaseApp*") -and ($_.PackageName -notlike "Microsoft.VP9*") -and ($_.PackageName -notlike "Microsoft.VP9VideoExtensions*") -and ($_.PackageName -notlike "Microsoft.Web*Extension*") -and ($_.PackageName -notlike "Microsoft.Wallet*") -and ($_.PackageName -notlike "Microsoft.Windows.DevHome*") -and ($_.PackageName -notlike "Microsoft.WindowsStore*") -and ($_.PackageName -notlike "Microsoft.WindowsMaps*")  -and ($_.PackageName -notlike "Microsoft.WindowsSoundRecorder*") -and ($_.PackageName -notlike "Microsoft.VCLibs*") -and ($_.PackageName -notlike "Microsoft.VP9VideoEstension*") -and ($_.PackageName -notlike "Microsoft.Web*Extension*") -and ($_.PackageName -notlike "Microsoft.Wallet*") -and ($_.PackageName -notlike "Microsoft.Windows.DevHome*") -and ($_.PackageName -notlike "Microsoft.WindowsAlarms*") -and ($_.PackageName -notlike "Microsoft.WindowsCalculator*") }
 $GET_APPXPPACKAGE_NAME = Write-Output $GET_APPXPPACKAGE.PackageName

 ForEach ($_ in $GET_APPXPPACKAGE_NAME) {
  Write-Output "Removing AppxProvisionedPackage : $_ " >> $altanlog\AppxProvisionedPackage.log
  Remove-AppxProvisionedPackage -AllUsers -Online -PackageName $_
 }

}
disable_win_packages

